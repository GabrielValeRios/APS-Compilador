# GRAMMAR FOR LOGIC_COMP_LANGUAGE

statments = “{”, statment, “;”, { statment, “;” }, “}” ;
statment = atribuiton | statments ;
atribuiton = identifier, “=”, expression ;
expression = term, { (“+” | “-”), term } ;
term = factor, { (“*” | “/”), factor } ;
factor = (“+” | “-”), factor | number | “(”, expression, “)” | identifier ;
identifier = letter, { letter | digito | “_” } ;
number = digit, { digit } ;
letter = ( a | ... | z | A | ... | Z ) ;
digit = ( 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 ) ;